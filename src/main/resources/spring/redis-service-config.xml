<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context-3.2.xsd
            http://www.springframework.org/schema/tx   
           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
           http://www.springframework.org/schema/data/mongo 
           http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
           http://mybatis.org/schema/mybatis-spring 
           http://mybatis.org/schema/mybatis-spring.xsd
            http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">



	<!-- ============================= config redis ============================= -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxTotal" value="${redis.maxTotal}" />
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
		<property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}" />
	</bean>
	
	<bean id="jedisConnFactory"
	class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
	p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.password}" p:timeout="${redis.timeout}" p:pool-config-ref="poolConfig"
	p:use-pool="true" p:database="${redis.database}"/>


	<!--redisCluster配置 -->
	
<!-- 	<bean id="resourcePropertySource" -->
<!-- 		class="org.springframework.core.io.support.ResourcePropertySource"> -->
<!-- 		<constructor-arg name="name" value="redis.properties" /> -->
<!-- 		<constructor-arg name="resource" -->
<!-- 			value="classpath:config/redis.test" /> -->
<!-- 	</bean> -->
	
<!-- 	<bean id="redisClusterConfiguration" -->
<!-- 		class="org.springframework.data.redis.connection.RedisClusterConfiguration"> -->
<!-- 		<constructor-arg name="propertySource" ref="resourcePropertySource" /> -->
<!-- 	</bean> -->

<!-- 	<bean id="jedisConnFactory" -->
<!-- 		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"> -->
<!-- 		<constructor-arg name="clusterConfig" ref="redisClusterConfiguration" /> -->
<!-- 		<constructor-arg name="poolConfig" ref="poolConfig" /> -->
<!-- 		<property name="password" value="${redis.password}" /> -->
<!-- 		<property name="timeout" value="${redis.timeout}"></property> -->
<!-- 	</bean> -->

	<!-- redis template definition -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="jedisConnFactory">
		<property name="KeySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
		</property>
		<property name="ValueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
		</property>

		<property name="HashKeySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
		</property>
		<property name="HashValueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
		</property>
	</bean>


</beans>